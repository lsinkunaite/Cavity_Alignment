close all;
clear all;
fitting_path='/home/laurasinkunaite/Finesse2.0/Misalignment/Fitting/';
file_1D='1D_test.txt';file_3D='2D_test.txt';file_2D='3D_test.txt';
Matrix_1D=csvread(strcat(fitting_path,file_1D));
[sorted_1D,locs_1D]=sort(Matrix_1D(:,1));
tmp_1D=Matrix_1D(:,2); tmp_1D=tmp_1D(locs_1D);
Matrix_2D=csvread(strcat(fitting_path,file_2D));
[sorted_2D,locs_2D]=sort(Matrix_2D(:,1));
tmp_2D=Matrix_2D(:,2); tmp_2D=tmp_2D(locs_2D);
Matrix_3D=csvread(strcat(fitting_path,file_3D));
[sorted_3D,locs_3D]=sort(Matrix_3D(:,1));
tmp_3D=Matrix_3D(:,2); tmp_3D=tmp_3D(locs_3D);
figure(1)
plot(sorted_1D(:,1),tmp_1D,'r');
hold on;
plot(sorted_2D(:,1),tmp_2D,'b');
hold on;
plot(sorted_3D(:,1),tmp_3D,'k');
hold on;
x2=0:0.01:5; y2=x2;
plot(x2,y2,'-.k');
legend('1D','2D','3D','Location','northwest');
xlim([0 5]);
xlabel('Calculated misalignment');
ylabel('Gouy misalignment');
title({'Misalignment algorithm applied to', 'Finesse simulation (maxTEM=20)'});
figure(2)
plot(sorted_1D(:,1),tmp_1D-sorted_1D(:,1),'r');
hold on;
plot(sorted_2D(:,1),tmp_2D-sorted_2D(:,1),'b');
hold on;
plot(sorted_3D(:,1),tmp_3D-sorted_3D(:,1),'k');
hold on;
x2=0:0.01:5; y2=zeros(length(x2));
plot(x2,y2,'-.k');
legend('1D','2D','3D','Location','southwest');
xlim([0 5]);
xlabel('Calculated misalignment');
ylabel('(Gouy-calculated) misalignment');
title({'Misalignment algorithm applied to', 'Finesse simulation (maxTEM=20)'});